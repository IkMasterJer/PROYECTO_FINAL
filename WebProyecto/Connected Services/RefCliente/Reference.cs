//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebProyecto.RefCliente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/WCFProyecto")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClienteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido {
            get {
                return this.ApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoField, value) != true)) {
                    this.ApellidoField = value;
                    this.RaisePropertyChanged("Apellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClienteID {
            get {
                return this.ClienteIDField;
            }
            set {
                if ((this.ClienteIDField.Equals(value) != true)) {
                    this.ClienteIDField = value;
                    this.RaisePropertyChanged("ClienteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RefCliente.IServCliente")]
    public interface IServCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/InsertarCliente", ReplyAction="http://tempuri.org/IServCliente/InsertarClienteResponse")]
        string InsertarCliente(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/InsertarCliente", ReplyAction="http://tempuri.org/IServCliente/InsertarClienteResponse")]
        System.Threading.Tasks.Task<string> InsertarClienteAsync(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ObtenerDetallesCliente", ReplyAction="http://tempuri.org/IServCliente/ObtenerDetallesClienteResponse")]
        System.Data.DataSet ObtenerDetallesCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ObtenerDetallesCliente", ReplyAction="http://tempuri.org/IServCliente/ObtenerDetallesClienteResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDetallesClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ObtenerClienteActualizado", ReplyAction="http://tempuri.org/IServCliente/ObtenerClienteActualizadoResponse")]
        System.Data.DataSet ObtenerClienteActualizado(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ObtenerClienteActualizado", ReplyAction="http://tempuri.org/IServCliente/ObtenerClienteActualizadoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerClienteActualizadoAsync(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ActualizarCliente", ReplyAction="http://tempuri.org/IServCliente/ActualizarClienteResponse")]
        string ActualizarCliente(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/ActualizarCliente", ReplyAction="http://tempuri.org/IServCliente/ActualizarClienteResponse")]
        System.Threading.Tasks.Task<string> ActualizarClienteAsync(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/EliminarCliente", ReplyAction="http://tempuri.org/IServCliente/EliminarClienteResponse")]
        bool EliminarCliente(WebProyecto.RefCliente.Cliente regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServCliente/EliminarCliente", ReplyAction="http://tempuri.org/IServCliente/EliminarClienteResponse")]
        System.Threading.Tasks.Task<bool> EliminarClienteAsync(WebProyecto.RefCliente.Cliente regdet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServClienteChannel : WebProyecto.RefCliente.IServCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServClienteClient : System.ServiceModel.ClientBase<WebProyecto.RefCliente.IServCliente>, WebProyecto.RefCliente.IServCliente {
        
        public ServClienteClient() {
        }
        
        public ServClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertarCliente(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.InsertarCliente(regdet);
        }
        
        public System.Threading.Tasks.Task<string> InsertarClienteAsync(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.InsertarClienteAsync(regdet);
        }
        
        public System.Data.DataSet ObtenerDetallesCliente() {
            return base.Channel.ObtenerDetallesCliente();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDetallesClienteAsync() {
            return base.Channel.ObtenerDetallesClienteAsync();
        }
        
        public System.Data.DataSet ObtenerClienteActualizado(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.ObtenerClienteActualizado(regdet);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerClienteActualizadoAsync(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.ObtenerClienteActualizadoAsync(regdet);
        }
        
        public string ActualizarCliente(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.ActualizarCliente(regdet);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarClienteAsync(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.ActualizarClienteAsync(regdet);
        }
        
        public bool EliminarCliente(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.EliminarCliente(regdet);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarClienteAsync(WebProyecto.RefCliente.Cliente regdet) {
            return base.Channel.EliminarClienteAsync(regdet);
        }
    }
}
